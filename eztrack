#!/usr/bin/env bash

set -eu

PROJECT_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

matlab_jvm="matlab -nodesktop -nosplash -r"
patient_id=$1
mef_lib=$PROJECT_HOME/mef_lib_2_1

[[ ! -z "$patient_id" ]] || { echo "Usage: ./eztrack <patient_id (e.g. PY12N008)>" ; exit 1 ; }

[[ ! -z "`which matlab`" ]] || \
    { echo "MATLAB not found on the PATH; please check the Getting Started section in the README" ; exit 1 ; }

printf "\n== Validating $patient_id.csv  ==\n"
# "TODO: input validation: Map patient_id to $patient_id.csv saved to $PROJECT_HOME"

printf "\n== Finding MEF files for $patient_id  ==\n"
# "TODO: mef_finder"

# TODO: We know the corresponding time slice(s) after finding mef's of interest: hard-coded for now
segment_id=0077

printf "\n== Copying MEF files to local storage  ==\n"
mef_data=$PROJECT_HOME/data/mef/$patient_id
mkdir -p $mef_data

# "TODO: mef_copy"

printf "\n== mef2eeg ==\n"

printf "\n== mef2ascii ==\n"
rm -f $mef_data/*.txt
ls $mef_data/*.mef | xargs -n 1 -P 8 $mef_lib/mef2ascii
# TODO: Extract mef headers here for use in time and channel filters

printf "\n== downsample ==\n"
ls $mef_data/*.txt | xargs -n 1 -P 8 $PROJECT_HOME/mef2eeg/downsample

printf "\n== time_filter ==\n"
# TODO: Take the writeup about date conversion logic from the Trello card and move it to the very first step.
ls $mef_data/*downsample.txt | xargs -I% -n 1 -P 8 $PROJECT_HOME/mef2eeg/time_filter % 452001 300000

printf "\n== channel_filter  ==\n"
eeg_data=$PROJECT_HOME/output/eeg/$patient_id
mkdir -p $eeg_data

$PROJECT_HOME/channel_filter $patient_id $mef_data $eeg_data $segment_id

printf "\n== signals2eeg ==\n"
# The channel filter defines the signals of interest. Combine these into one file:
paste -d ',' $mef_data/channels/*.txt > $eeg_data/${patient_id}_${segment_id}_eeg.csv

printf "\n== eeg2fsv ==\n"
num_channels=`ls $mef_data/channels/*.txt | wc -l | xargs`
included_channels="[1:$num_channels]"    # PY12N008: "[1:4 7:89]". Convert the data to not require defining these gaps.
# TODO: These sizes are the results of date_converter in time_filter.
sizes="[300000]" # PY12N008: "[640000, 672000, 737000, 729000]"
eeg2fsv_out=$eeg_data/adj_pwr

rm -rf $eeg2fsv_out
cd $PROJECT_HOME/eeg2fsv && \
    echo "Invoking matlab with eeg2fsv('$eeg_data', '$patient_id', $num_channels, $included_channels, $sizes)" && \
    $matlab_jvm "eeg2fsv('${eeg_data}/', '$patient_id', $num_channels, $included_channels, $sizes); exit"

# Copy results to output dir used in fsv2heatmap computation.
cp $eeg2fsv_out/svd_vectors/fsv_pwr$patient_id.mat $PROJECT_HOME/output/fsv

printf "\n== fsv2heatmap ==\n"
temporal_out=/tmp/eztrack-temporal
cd $PROJECT_HOME/fsv2heatmap && \
    $matlab_jvm "csv_file = temporal_ieeg_results('$PROJECT_HOME','$patient_id'); display(csv_file); exit" > $temporal_out

# TODO: Have fsv2heatmap save this output path to a different file to avoid relying on position with tail.
results=`tail -n 3 $temporal_out | head -n 1`
echo $results > /tmp/eztrack.out

printf "\nEZTrack is finished processing $patient_id. Results saved to:\n$results\nThis path is also in /tmp/eztrack.out\n"
